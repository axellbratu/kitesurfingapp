{"version":3,"sources":["./src/environments/environment.ts","./src/app/addspot/addspot.component.ts","./src/app/addspot/addspot.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/spotstable/spotstable.component.html","./src/app/spotstable/spotstable.component.ts","./src/app/services/spots.service.ts","./src/app/app.module.ts","./src/app/services/login-service.service.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/services/getuser.service.ts","./src/app/services/material/material.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/dashboardontainer/dashboardontainer.component.ts","./src/app/dashboardontainer/dashboardontainer.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/leaflet-map.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport {LeafletMap} from '../map/leaflet-map';\r\n@Component({\r\n  selector: 'app-addspot',\r\n  templateUrl: './addspot.component.html',\r\n  styleUrls: ['./addspot.component.css']\r\n})\r\nexport class AddspotComponent implements OnInit {\r\n  minimap:LeafletMap;\r\n  constructor() { }\r\n\r\n  addSpot(){\r\n    //here would go a service with a POST call to the API /spot but I ran out of time\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngAfterViewInit():void{\r\n    this.minimap= new LeafletMap;\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <mat-card fxLayout=\"grid\" fxLayoutAlign=\"center center\">\r\n        <mat-card-content>\r\n            <div>\r\n                <h2>Add a spot</h2>\r\n            </div>\r\n            <label>Name:</label>\r\n            <div>\r\n                <input matInput required type=\"text\">\r\n            </div>\r\n            <label>Country:</label>\r\n            <div>\r\n                <input matInput required type=\"text\">\r\n            </div>\r\n\r\n            <div>\r\n                <label>High season:</label>\r\n\r\n            </div>\r\n            <div>\r\n                <label>From</label>\r\n                <input data-provide=\"datepicker\" type=\"date\">\r\n            </div>\r\n            <div>\r\n                <label>To:</label>\r\n                <input data-provide=\"datepicker\" type=\"date\">\r\n            </div>\r\n            <!--\r\n            could not get another map to instantiate in the dialogue within the aloted time.\r\n        -->\r\n            <button mat-stroked-button (click)=\"addSpot()\" style=\"background-color: #25ccff;\">\r\n                Add spot\r\n            </button>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n<!--\r\n    name\r\n    Country\r\n    High season\r\n    minimap\r\n-->","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'kitesurfingapp';\r\n}\r\n","<router-outlet>\r\n\r\n</router-outlet>","\r\n\r\n<!--\r\n\r\n    Angular material was causing the map to disappear. Due to time constraints had to use bootstrap for table\r\n\r\n-->\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Country</th>\r\n            <th>Latitude</th>\r\n            <th>Longitude</th>\r\n            <th>Wind Probability</th>\r\n            <th>When to go</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of spotsData\">\r\n            <td>{{item.name}}</td>\r\n            <td>{{item.country}}</td>\r\n            <td>{{item.lat | number}}</td>\r\n            <td>{{item.long | number}}</td>\r\n            <td>{{item.probability}}%</td>\r\n            <td>{{item.month}}</td>\r\n        </tr>\r\n    </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {spotsPayload} from '../services/payloads/spotspayloads';\r\nimport {SpotsService} from '../services/spots.service';\r\nimport { MatTableDataSource} from '@angular/material/table';\r\n@Component({\r\n  selector: 'app-spotstable',\r\n  templateUrl: './spotstable.component.html',\r\n  styleUrls: ['./spotstable.component.css']\r\n})\r\n\r\nexport class SpotstableComponent implements OnInit {\r\n  spotsData:spotsPayload[]=[];\r\n  constructor(private service:SpotsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSpots();\r\n    console.log(this.spotsData);\r\n  }\r\n  getSpots(){\r\n    this.service.getSpots().subscribe(res=>{\r\n      for(let item of res as spotsPayload){\r\n        this.spotsData.push(item);\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport {spotsPayload} from '../services/payloads/spotspayloads';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpotsService {\r\n\r\n  constructor(private HttpClient:HttpClient) { }\r\n\r\n  getSpots(){\r\n    //get request for the surfing spots\r\n    return this.HttpClient.get<spotsPayload>(`https://60548360d4d9dc001726d591.mockapi.io/spot`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { DashboardontainerComponent } from './dashboardontainer/dashboardontainer.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { SpotstableComponent } from './spotstable/spotstable.component';\r\nimport { MaterialModule } from './services/material/material.module';\r\nimport { AddspotComponent } from './addspot/addspot.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardontainerComponent,\r\n    NavbarComponent,\r\n    MapComponent,\r\n    SpotstableComponent,\r\n    AddspotComponent\r\n  ],\r\n  entryComponents:[AddspotComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService {\r\n\r\n  constructor(private HttpClient:HttpClient) { }\r\n  doLogin(form:FormGroup):Observable<any>{\r\n    //post request for the login\r\n    return this.HttpClient.post(`https://60548360d4d9dc001726d591.mockapi.io/login?username=${form[0]}&password=${form[1]}`,null);\r\n  }\r\n}\r\n","import { Component, OnInit,Input,AfterViewInit } from '@angular/core';\r\nimport {LeafletMap} from './leaflet-map';\r\nimport {spotsPayload} from '../services/payloads/spotspayloads';\r\nimport {SpotsService} from '../services/spots.service';\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit {\r\n  //variable declarations for map and payload for API calls\r\n  map:LeafletMap;\r\n  //Ideally spots data would have been done in dashboardcontainer component in order to transfer data easier between map and spotstable components\r\n  spots:spotsPayload[]=[];\r\n\r\n  constructor(private service:SpotsService) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  getSpots(){\r\n    //api call for the spots\r\n    this.service.getSpots().subscribe(res=>{\r\n      for(let item of res as spotsPayload){\r\n        this.spots.push(item);\r\n        //function call to leaflet-map in order to add markers to the map\r\n        this.map.setMark(item);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit():void{\r\n    //Functions are called after view is initiallized to allow for map render\r\n    this.map= new LeafletMap();\r\n    this.getSpots();\r\n  }\r\n\r\n}\r\n","<div id=\"map\"></div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport {loginIds,Userpayload} from '../services/payloads/userpayload';\r\nimport { throwError } from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetuserService {\r\n\r\n  constructor(private HttpClient:HttpClient) {}\r\n      getUserData(id:loginIds){\r\n          //checks if user exists in the database\r\n          return this.HttpClient.get<Userpayload>(`https://60548360d4d9dc001726d591.mockapi.io/user/${id.userId}`).pipe(catchError(this.handleError));\r\n        }\r\n        handleError(){\r\n          return throwError(false);\r\n        };\r\n\r\n    \r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// Material Form Controls\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n// Material Navigation\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n// Material Layout\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n// Material Buttons & Indicators\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n// Material Popups & Modals\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n// Material Data tables\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\r\nimport { AddspotComponent } from '../addspot/addspot.component';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public dialog:MatDialog,private router:Router) { }\r\n\r\n  openDialog(){\r\n    this.dialog.open(AddspotComponent,{\r\n      height: '400px',\r\n      width: '600px',\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logout(){\r\n    sessionStorage.removeItem('loginAvatar');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<mat-toolbar class=\"navbar\">\r\n    <div class=\"Fancytext\">Kite</div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <span ><button class=\"addspotstyle\" mat-stroked-button (click)=\"openDialog()\">Add spot</button></span>\r\n        <span><button [matMenuTriggerFor]=\"appMenu\" mat-icon-button color=\"#f5f5f5\" class=\"personbutton\" >\r\n                <mat-icon>person</mat-icon>\r\n            </button></span>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n<mat-menu #appMenu=\"matMenu\">\r\n    <button mat-button fxFlexFill (click)='logout()'>Log out</button>\r\n</mat-menu>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboardontainer',\r\n  templateUrl: './dashboardontainer.component.html',\r\n  styleUrls: ['./dashboardontainer.component.css']\r\n})\r\nexport class DashboardontainerComponent implements OnInit {\r\n  //dashcontainer is used only to agregate the other components.\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<app-navbar></app-navbar>\r\n<app-map></app-map>\r\n<app-spotstable></app-spotstable>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {DashboardontainerComponent} from './dashboardontainer/dashboardontainer.component';\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:LoginComponent\r\n  },{\r\n    path:'dashboard',\r\n    component:DashboardontainerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Output,EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { LoginServiceService } from '../services/login-service.service';\r\nimport { Userpayload,loginIds } from '../services/payloads/userpayload';\r\nimport { GetuserService } from '../services/getuser.service';\r\nimport { compileNgModule } from '@angular/compiler';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  //formgroup declaration for input handling\r\n  loginForm: FormGroup;\r\n\r\n  //Login flag to display user not found message\r\n  notLogged:boolean;\r\n\r\n  //event emitter to update html component \r\n  @Output() logCheck:EventEmitter<boolean>= new EventEmitter();\r\n  \r\n  \r\n\r\n  constructor(private service: LoginServiceService, private serv: GetuserService, private router:Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //instantiate FormGroup in order to get the data entered\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(),\r\n      password: new FormControl()\r\n    });\r\n\r\n    //login flag attribution to hide failed login message\r\n    this.notLogged=false;\r\n  }\r\n\r\n  onLogin() {\r\n    //using the login service in order to get credentials\r\n    this.service.doLogin(this.loginForm.value).subscribe(res => {\r\n\r\n      this.serv.getUserData(res as loginIds).subscribe(result => {\r\n        //setting local storage variable in place of jwt token for authentication\r\n        localStorage.setItem('loginAvatar',result.avatar);\r\n        //redirecting to dashboard. Should have used authguards here\r\n        this.router.navigateByUrl('/dashboard');\r\n      }\r\n    ,error=>{\r\n      //if login fails flag gets triggered and message gets displayed\r\n      this.notLogged=true;\r\n      this.logCheck.emit(this.notLogged);\r\n    });\r\n\r\n    \r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"grid\" fxLayoutAlign=\"center center\" style=\"height: 100vh; width: 100vh\">\r\n<mat-card class=\"mat-elevation-z4\">\r\n  <mat-card-title class=\"Fancytext\">\r\n    Kite\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n  <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" required />\r\n  <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" required />\r\n  <div *ngIf=\"notLogged\">\r\n    <p style=\"color:red;\">User not found. Please try again</p>\r\n  </div>\r\n  <button mat-stroked-button type=\"submit\" label=\"Login\" value=\"Login\">Login</button>\r\n</form>\r\n</mat-card-content>\r\n</mat-card>\r\n</div>\r\n\r\n<!--\r\n  when resizing in chrome dev tools if changed to pixel 2 login form does not align properly.\r\n  If I have the time to fix it by the time of submission you will not see this message\r\n-->","import * as leaflet from 'leaflet';\r\nimport {spotsPayload} from '../services/payloads/spotspayloads';\r\nexport class LeafletMap{\r\n\r\n    //initial declaration of the leaflet\r\n    harta:leaflet.Map;\r\n\r\n    bucharest={\r\n        //setting default coordinates for map to focus on\r\n        coords: leaflet.latLng(44.439663,26.096306),\r\n        zoom:2\r\n    }\r\n    greenIcon = leaflet.icon({\r\n        iconUrl: '../assets/marker-icon.png',\r\n    \r\n        iconSize:     [25, 41], // size of the icon\r\n\r\n        iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n\r\n        popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n    });\r\n\r\n    favoriteIcon = leaflet.icon({\r\n        iconUrl: '../assets/marker-icon-fav.png',\r\n    \r\n        iconSize:     [25, 41], // size of the icon\r\n\r\n        iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n\r\n        popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n    });\r\n    setMark(spot:spotsPayload){\r\n        //markers should have been done with a different angular component in order to allow icon changes and proper mat-card implementation\r\n        leaflet.marker([spot.lat,spot.long],{icon:this.greenIcon}).addTo(this.harta).bindPopup(`\r\n        <mat-card>\r\n        <mat-card-title>${spot.name}\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n        <div>\r\n        ${spot.country}\r\n        </div>\r\n        <p>Wind Probability: ${spot.probability}%</p>\r\n        <p>Latitude:${spot.lat}</p>\r\n        <p>Longitude:${spot.long}</p>\r\n        <p>When to go:${spot.month}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n        <button mat-button class=\"popupButton\">Add to favourites</button>\r\n        </mat-card-actions>\r\n        </mat-card>\r\n        `);\r\n\r\n    }\r\n\r\n\r\n    constructor(){\r\n        //initiate map\r\n        this.harta=leaflet.map(\"map\");\r\n        //select tiling for the map\r\n        leaflet.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(this.harta);\r\n        //sets view in order to make map visible\r\n        this.harta.setView(this.bucharest.coords,this.bucharest.zoom);\r\n    }\r\n    \r\n    \r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nenableProdMode();\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}