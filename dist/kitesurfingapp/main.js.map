{"version":3,"sources":["./src/environments/environment.ts","./src/app/addspot/addspot.component.ts","./src/app/addspot/addspot.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/spotstable/spotstable.component.html","./src/app/spotstable/spotstable.component.ts","./src/app/services/spots.service.ts","./src/app/app.module.ts","./src/app/services/login-service.service.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/services/getuser.service.ts","./src/app/services/material/material.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/dashboardontainer/dashboardontainer.component.ts","./src/app/dashboardontainer/dashboardontainer.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/leaflet-map.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport {LeafletMap} from '../map/leaflet-map';\n@Component({\n  selector: 'app-addspot',\n  templateUrl: './addspot.component.html',\n  styleUrls: ['./addspot.component.css']\n})\nexport class AddspotComponent implements OnInit {\n  minimap:LeafletMap;\n  constructor() { }\n\n  addSpot(){\n    //here would go a service with a POST call to the API /spot but I ran out of time\n  }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit():void{\n    this.minimap= new LeafletMap;\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n    <mat-card fxLayout=\"grid\" fxLayoutAlign=\"center center\">\n        <mat-card-content>\n            <div>\n                <h2>Add a spot</h2>\n            </div>\n            <label>Name:</label>\n            <div>\n                <input matInput required type=\"text\">\n            </div>\n            <label>Country:</label>\n            <div>\n                <input matInput required type=\"text\">\n            </div>\n\n            <div>\n                <label>High season:</label>\n\n            </div>\n            <div>\n                <label>From</label>\n                <input data-provide=\"datepicker\" type=\"date\">\n            </div>\n            <div>\n                <label>To:</label>\n                <input data-provide=\"datepicker\" type=\"date\">\n            </div>\n            <!--\n            could not get another map to instantiate in the dialogue within the aloted time.\n        -->\n            <button mat-stroked-button (click)=\"addSpot()\" style=\"background-color: #25ccff;\">\n                Add spot\n            </button>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n\n<!--\n    name\n    Country\n    High season\n    minimap\n-->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kitesurfingapp';\n}\n","<router-outlet>\r\n\r\n</router-outlet>","\n\n<!--\n\n    Angular material was causing the map to disappear. Due to time constraints had to use bootstrap for table\n\n-->\n<div class=\"table-responsive\">\n    <table class=\"table table-striped table-hover\">\n        <thead>\n        <tr>\n            <th>Name</th>\n            <th>Country</th>\n            <th>Latitude</th>\n            <th>Longitude</th>\n            <th>Wind Probability</th>\n            <th>When to go</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of spotsData\">\n            <td>{{item.name}}</td>\n            <td>{{item.country}}</td>\n            <td>{{item.lat | number}}</td>\n            <td>{{item.long | number}}</td>\n            <td>{{item.probability}}%</td>\n            <td>{{item.month}}</td>\n        </tr>\n    </tbody>\n    </table>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {spotsPayload} from '../services/payloads/spotspayloads';\nimport {SpotsService} from '../services/spots.service';\nimport { MatTableDataSource} from '@angular/material/table';\n@Component({\n  selector: 'app-spotstable',\n  templateUrl: './spotstable.component.html',\n  styleUrls: ['./spotstable.component.css']\n})\n\nexport class SpotstableComponent implements OnInit {\n  spotsData:spotsPayload[]=[];\n  constructor(private service:SpotsService) { }\n\n  ngOnInit(): void {\n    this.getSpots();\n    console.log(this.spotsData);\n  }\n  getSpots(){\n    this.service.getSpots().subscribe(res=>{\n      for(let item of res as spotsPayload){\n        this.spotsData.push(item);\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {spotsPayload} from '../services/payloads/spotspayloads';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotsService {\n\n  constructor(private HttpClient:HttpClient) { }\n\n  getSpots(){\n    //get request for the surfing spots\n    return this.HttpClient.get<spotsPayload>(`https://60548360d4d9dc001726d591.mockapi.io/spot`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { DashboardontainerComponent } from './dashboardontainer/dashboardontainer.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { MapComponent } from './map/map.component';\nimport { SpotstableComponent } from './spotstable/spotstable.component';\nimport { MaterialModule } from './services/material/material.module';\nimport { AddspotComponent } from './addspot/addspot.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardontainerComponent,\n    NavbarComponent,\n    MapComponent,\n    SpotstableComponent,\n    AddspotComponent\n  ],\n  entryComponents:[AddspotComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MaterialModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  constructor(private HttpClient:HttpClient) { }\n  doLogin(form:FormGroup):Observable<any>{\n    //post request for the login\n    return this.HttpClient.post(`https://60548360d4d9dc001726d591.mockapi.io/login?username=${form[0]}&password=${form[1]}`,null);\n  }\n}\n","import { Component, OnInit,Input,AfterViewInit } from '@angular/core';\nimport {LeafletMap} from './leaflet-map';\nimport {spotsPayload} from '../services/payloads/spotspayloads';\nimport {SpotsService} from '../services/spots.service';\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n  //variable declarations for map and payload for API calls\n  map:LeafletMap;\n  //Ideally spots data would have been done in dashboardcontainer component in order to transfer data easier between map and spotstable components\n  spots:spotsPayload[]=[];\n\n  constructor(private service:SpotsService) {\n\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  getSpots(){\n    //api call for the spots\n    this.service.getSpots().subscribe(res=>{\n      for(let item of res as spotsPayload){\n        this.spots.push(item);\n        //function call to leaflet-map in order to add markers to the map\n        this.map.setMark(item);\n      }\n\n    });\n  }\n\n  ngAfterViewInit():void{\n    //Functions are called after view is initiallized to allow for map render\n    this.map= new LeafletMap();\n    this.getSpots();\n  }\n\n}\n","<div id=\"map\"></div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {loginIds,Userpayload} from '../services/payloads/userpayload';\nimport { throwError } from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetuserService {\n\n  constructor(private HttpClient:HttpClient) {}\n      getUserData(id:loginIds){\n          //checks if user exists in the database\n          return this.HttpClient.get<Userpayload>(`https://60548360d4d9dc001726d591.mockapi.io/user/${id.userId}`).pipe(catchError(this.handleError));\n        }\n        handleError(){\n          return throwError(false);\n        };\n\n    \n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// Material Form Controls\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n// Material Navigation\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n// Material Layout\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\n// Material Buttons & Indicators\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\n// Material Popups & Modals\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n// Material Data tables\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule { }","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\nimport { AddspotComponent } from '../addspot/addspot.component';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public dialog:MatDialog,private router:Router) { }\n\n  openDialog(){\n    this.dialog.open(AddspotComponent,{\n      height: '400px',\n      width: '600px',\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    sessionStorage.removeItem('loginAvatar');\n    this.router.navigateByUrl('/');\n  }\n}\n","<mat-toolbar class=\"navbar\">\n    <div class=\"Fancytext\">Kite</div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <span ><button class=\"addspotstyle\" mat-stroked-button (click)=\"openDialog()\">Add spot</button></span>\n        <span><button [matMenuTriggerFor]=\"appMenu\" mat-icon-button color=\"#f5f5f5\" class=\"personbutton\" >\n                <mat-icon>person</mat-icon>\n            </button></span>\n    </div>\n</mat-toolbar>\n\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-button fxFlexFill (click)='logout()'>Log out</button>\n</mat-menu>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboardontainer',\n  templateUrl: './dashboardontainer.component.html',\n  styleUrls: ['./dashboardontainer.component.css']\n})\nexport class DashboardontainerComponent implements OnInit {\n  //dashcontainer is used only to agregate the other components.\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<app-navbar></app-navbar>\n<app-map></app-map>\n<app-spotstable></app-spotstable>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport {DashboardontainerComponent} from './dashboardontainer/dashboardontainer.component';\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent\n  },{\n    path:'dashboard',\n    component:DashboardontainerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { LoginServiceService } from '../services/login-service.service';\nimport { Userpayload,loginIds } from '../services/payloads/userpayload';\nimport { GetuserService } from '../services/getuser.service';\nimport { compileNgModule } from '@angular/compiler';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  //formgroup declaration for input handling\n  loginForm: FormGroup;\n\n  //Login flag to display user not found message\n  notLogged:boolean;\n\n  //event emitter to update html component \n  @Output() logCheck:EventEmitter<boolean>= new EventEmitter();\n  \n  \n\n  constructor(private service: LoginServiceService, private serv: GetuserService, private router:Router) {\n  }\n\n  ngOnInit(): void {\n    //instantiate FormGroup in order to get the data entered\n    this.loginForm = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n\n    //login flag attribution to hide failed login message\n    this.notLogged=false;\n  }\n\n  onLogin() {\n    //using the login service in order to get credentials\n    this.service.doLogin(this.loginForm.value).subscribe(res => {\n\n      this.serv.getUserData(res as loginIds).subscribe(result => {\n        //setting local storage variable in place of jwt token for authentication\n        localStorage.setItem('loginAvatar',result.avatar);\n        //redirecting to dashboard. Should have used authguards here\n        this.router.navigateByUrl('/dashboard');\n      }\n    ,error=>{\n      //if login fails flag gets triggered and message gets displayed\n      this.notLogged=true;\n      this.logCheck.emit(this.notLogged);\n    });\n\n    \n    });\n  }\n}\n","<div fxLayout=\"grid\" fxLayoutAlign=\"center center\" style=\"height: 100vh; width: 100vh\">\n<mat-card class=\"mat-elevation-z4\">\n  <mat-card-title class=\"Fancytext\">\n    Kite\n  </mat-card-title>\n  <mat-card-content>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n  <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" required />\n  <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" required />\n  <div *ngIf=\"notLogged\">\n    <p style=\"color:red;\">User not found. Please try again</p>\n  </div>\n  <button mat-stroked-button type=\"submit\" label=\"Login\" value=\"Login\">Login</button>\n</form>\n</mat-card-content>\n</mat-card>\n</div>\n\n<!--\n  when resizing in chrome dev tools if changed to pixel 2 login form does not align properly.\n  If I have the time to fix it by the time of submission you will not see this message\n-->","import * as leaflet from 'leaflet';\r\nimport {spotsPayload} from '../services/payloads/spotspayloads';\r\nexport class LeafletMap{\r\n\r\n    //initial declaration of the leaflet\r\n    harta:leaflet.Map;\r\n\r\n    bucharest={\r\n        //setting default coordinates for map to focus on\r\n        coords: leaflet.latLng(44.439663,26.096306),\r\n        zoom:2\r\n    }\r\n    greenIcon = leaflet.icon({\r\n        iconUrl: '../assets/marker-icon.png',\r\n    \r\n        iconSize:     [25, 41], // size of the icon\r\n\r\n        iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n\r\n        popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n    });\r\n\r\n    favoriteIcon = leaflet.icon({\r\n        iconUrl: '../assets/marker-icon-fav.png',\r\n    \r\n        iconSize:     [25, 41], // size of the icon\r\n\r\n        iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n\r\n        popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n    });\r\n    setMark(spot:spotsPayload){\r\n        //markers should have been done with a different angular component in order to allow icon changes and proper mat-card implementation\r\n        leaflet.marker([spot.lat,spot.long],{icon:this.greenIcon}).addTo(this.harta).bindPopup(`\r\n        <mat-card>\r\n        <mat-card-title>${spot.name}\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n        <div>\r\n        ${spot.country}\r\n        </div>\r\n        <p>Wind Probability: ${spot.probability}%</p>\r\n        <p>Latitude:${spot.lat}</p>\r\n        <p>Longitude:${spot.long}</p>\r\n        <p>When to go:${spot.month}</p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n        <button mat-button class=\"popupButton\">Add to favourites</button>\r\n        </mat-card-actions>\r\n        </mat-card>\r\n        `);\r\n\r\n    }\r\n\r\n\r\n    constructor(){\r\n        //initiate map\r\n        this.harta=leaflet.map(\"map\");\r\n        //select tiling for the map\r\n        leaflet.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(this.harta);\r\n        //sets view in order to make map visible\r\n        this.harta.setView(this.bucharest.coords,this.bucharest.zoom);\r\n    }\r\n    \r\n    \r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nenableProdMode();\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}